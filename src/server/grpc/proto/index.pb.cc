// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: index.proto

#include "index.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_index_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_index_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeleteDocumentOp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_index_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InsertOrUpdateDocumentOp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_index_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SearchResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_index_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SetAttributeOp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_index_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Operation;
}  // namespace protobuf_index_2eproto
namespace Acoustid {
namespace Server {
namespace PB {
class GetDocumentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDocumentRequest>
      _instance;
} _GetDocumentRequest_default_instance_;
class GetDocumentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDocumentResponse>
      _instance;
} _GetDocumentResponse_default_instance_;
class GetAttributeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAttributeRequest>
      _instance;
} _GetAttributeRequest_default_instance_;
class GetAttributeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAttributeResponse>
      _instance;
} _GetAttributeResponse_default_instance_;
class InsertOrUpdateDocumentOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InsertOrUpdateDocumentOp>
      _instance;
} _InsertOrUpdateDocumentOp_default_instance_;
class DeleteDocumentOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteDocumentOp>
      _instance;
} _DeleteDocumentOp_default_instance_;
class SetAttributeOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetAttributeOp>
      _instance;
} _SetAttributeOp_default_instance_;
class OperationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Operation>
      _instance;
  const ::Acoustid::Server::PB::InsertOrUpdateDocumentOp* insert_or_update_document_;
  const ::Acoustid::Server::PB::DeleteDocumentOp* delete_document_;
  const ::Acoustid::Server::PB::SetAttributeOp* set_attribute_;
} _Operation_default_instance_;
class UpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateRequest>
      _instance;
} _UpdateRequest_default_instance_;
class UpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateResponse>
      _instance;
} _UpdateResponse_default_instance_;
class SearchResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchResult>
      _instance;
} _SearchResult_default_instance_;
class SearchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchRequest>
      _instance;
} _SearchRequest_default_instance_;
class SearchResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchResponse>
      _instance;
} _SearchResponse_default_instance_;
}  // namespace PB
}  // namespace Server
}  // namespace Acoustid
namespace protobuf_index_2eproto {
static void InitDefaultsGetDocumentRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_GetDocumentRequest_default_instance_;
    new (ptr) ::Acoustid::Server::PB::GetDocumentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::GetDocumentRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetDocumentRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetDocumentRequest}, {}};

static void InitDefaultsGetDocumentResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_GetDocumentResponse_default_instance_;
    new (ptr) ::Acoustid::Server::PB::GetDocumentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::GetDocumentResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetDocumentResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetDocumentResponse}, {}};

static void InitDefaultsGetAttributeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_GetAttributeRequest_default_instance_;
    new (ptr) ::Acoustid::Server::PB::GetAttributeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::GetAttributeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAttributeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAttributeRequest}, {}};

static void InitDefaultsGetAttributeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_GetAttributeResponse_default_instance_;
    new (ptr) ::Acoustid::Server::PB::GetAttributeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::GetAttributeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAttributeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAttributeResponse}, {}};

static void InitDefaultsInsertOrUpdateDocumentOp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_InsertOrUpdateDocumentOp_default_instance_;
    new (ptr) ::Acoustid::Server::PB::InsertOrUpdateDocumentOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::InsertOrUpdateDocumentOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InsertOrUpdateDocumentOp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInsertOrUpdateDocumentOp}, {}};

static void InitDefaultsDeleteDocumentOp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_DeleteDocumentOp_default_instance_;
    new (ptr) ::Acoustid::Server::PB::DeleteDocumentOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::DeleteDocumentOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteDocumentOp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteDocumentOp}, {}};

static void InitDefaultsSetAttributeOp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_SetAttributeOp_default_instance_;
    new (ptr) ::Acoustid::Server::PB::SetAttributeOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::SetAttributeOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetAttributeOp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetAttributeOp}, {}};

static void InitDefaultsOperation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_Operation_default_instance_;
    new (ptr) ::Acoustid::Server::PB::Operation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::Operation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Operation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsOperation}, {
      &protobuf_index_2eproto::scc_info_InsertOrUpdateDocumentOp.base,
      &protobuf_index_2eproto::scc_info_DeleteDocumentOp.base,
      &protobuf_index_2eproto::scc_info_SetAttributeOp.base,}};

static void InitDefaultsUpdateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_UpdateRequest_default_instance_;
    new (ptr) ::Acoustid::Server::PB::UpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::UpdateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateRequest}, {
      &protobuf_index_2eproto::scc_info_Operation.base,}};

static void InitDefaultsUpdateResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_UpdateResponse_default_instance_;
    new (ptr) ::Acoustid::Server::PB::UpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::UpdateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateResponse}, {}};

static void InitDefaultsSearchResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_SearchResult_default_instance_;
    new (ptr) ::Acoustid::Server::PB::SearchResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::SearchResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SearchResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSearchResult}, {}};

static void InitDefaultsSearchRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_SearchRequest_default_instance_;
    new (ptr) ::Acoustid::Server::PB::SearchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::SearchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SearchRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSearchRequest}, {}};

static void InitDefaultsSearchResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_SearchResponse_default_instance_;
    new (ptr) ::Acoustid::Server::PB::SearchResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::SearchResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SearchResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSearchResponse}, {
      &protobuf_index_2eproto::scc_info_SearchResult.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetDocumentRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDocumentResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAttributeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAttributeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InsertOrUpdateDocumentOp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteDocumentOp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetAttributeOp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Operation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchResponse.base);
}

::google::protobuf::Metadata file_level_metadata[13];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetDocumentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetDocumentRequest, index_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetDocumentRequest, doc_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetDocumentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetDocumentResponse, terms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetAttributeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetAttributeRequest, index_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetAttributeRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetAttributeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetAttributeResponse, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::InsertOrUpdateDocumentOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::InsertOrUpdateDocumentOp, doc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::InsertOrUpdateDocumentOp, terms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::DeleteDocumentOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::DeleteDocumentOp, doc_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SetAttributeOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SetAttributeOp, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SetAttributeOp, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::Operation, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::Operation, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::Acoustid::Server::PB::OperationDefaultTypeInternal, insert_or_update_document_),
  offsetof(::Acoustid::Server::PB::OperationDefaultTypeInternal, delete_document_),
  offsetof(::Acoustid::Server::PB::OperationDefaultTypeInternal, set_attribute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::Operation, op_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::UpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::UpdateRequest, index_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::UpdateRequest, ops_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::UpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchResult, doc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchResult, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchRequest, index_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchRequest, terms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchRequest, max_results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchResponse, results_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Acoustid::Server::PB::GetDocumentRequest)},
  { 7, -1, sizeof(::Acoustid::Server::PB::GetDocumentResponse)},
  { 13, -1, sizeof(::Acoustid::Server::PB::GetAttributeRequest)},
  { 20, -1, sizeof(::Acoustid::Server::PB::GetAttributeResponse)},
  { 26, -1, sizeof(::Acoustid::Server::PB::InsertOrUpdateDocumentOp)},
  { 33, -1, sizeof(::Acoustid::Server::PB::DeleteDocumentOp)},
  { 39, -1, sizeof(::Acoustid::Server::PB::SetAttributeOp)},
  { 46, -1, sizeof(::Acoustid::Server::PB::Operation)},
  { 55, -1, sizeof(::Acoustid::Server::PB::UpdateRequest)},
  { 62, -1, sizeof(::Acoustid::Server::PB::UpdateResponse)},
  { 67, -1, sizeof(::Acoustid::Server::PB::SearchResult)},
  { 74, -1, sizeof(::Acoustid::Server::PB::SearchRequest)},
  { 82, -1, sizeof(::Acoustid::Server::PB::SearchResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_GetDocumentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_GetDocumentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_GetAttributeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_GetAttributeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_InsertOrUpdateDocumentOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_DeleteDocumentOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_SetAttributeOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_Operation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_UpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_UpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_SearchResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_SearchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_SearchResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "index.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013index.proto\022\022Acoustid.Server.PB\"8\n\022Get"
      "DocumentRequest\022\022\n\nindex_name\030\001 \001(\t\022\016\n\006d"
      "oc_id\030\002 \001(\r\"$\n\023GetDocumentResponse\022\r\n\005te"
      "rms\030\002 \003(\r\"7\n\023GetAttributeRequest\022\022\n\ninde"
      "x_name\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\"%\n\024GetAttribu"
      "teResponse\022\r\n\005value\030\002 \001(\t\"9\n\030InsertOrUpd"
      "ateDocumentOp\022\016\n\006doc_id\030\001 \001(\r\022\r\n\005terms\030\002"
      " \003(\r\"\"\n\020DeleteDocumentOp\022\016\n\006doc_id\030\001 \001(\r"
      "\"-\n\016SetAttributeOp\022\014\n\004name\030\001 \001(\t\022\r\n\005valu"
      "e\030\002 \001(\t\"\342\001\n\tOperation\022Q\n\031insert_or_updat"
      "e_document\030\001 \001(\0132,.Acoustid.Server.PB.In"
      "sertOrUpdateDocumentOpH\000\022\?\n\017delete_docum"
      "ent\030\002 \001(\0132$.Acoustid.Server.PB.DeleteDoc"
      "umentOpH\000\022;\n\rset_attribute\030\003 \001(\0132\".Acous"
      "tid.Server.PB.SetAttributeOpH\000B\004\n\002op\"O\n\r"
      "UpdateRequest\022\022\n\nindex_name\030\001 \001(\t\022*\n\003ops"
      "\030\002 \003(\0132\035.Acoustid.Server.PB.Operation\"\020\n"
      "\016UpdateResponse\"-\n\014SearchResult\022\016\n\006doc_i"
      "d\030\001 \001(\r\022\r\n\005score\030\002 \001(\002\"G\n\rSearchRequest\022"
      "\022\n\nindex_name\030\001 \001(\t\022\r\n\005terms\030\002 \003(\r\022\023\n\013ma"
      "x_results\030\003 \001(\005\"C\n\016SearchResponse\0221\n\007res"
      "ults\030\001 \003(\0132 .Acoustid.Server.PB.SearchRe"
      "sult2\354\002\n\005Index\022^\n\013GetDocument\022&.Acoustid"
      ".Server.PB.GetDocumentRequest\032\'.Acoustid"
      ".Server.PB.GetDocumentResponse\022a\n\014GetAtt"
      "ribute\022\'.Acoustid.Server.PB.GetAttribute"
      "Request\032(.Acoustid.Server.PB.GetAttribut"
      "eResponse\022O\n\006Update\022!.Acoustid.Server.PB"
      ".UpdateRequest\032\".Acoustid.Server.PB.Upda"
      "teResponse\022O\n\006Search\022!.Acoustid.Server.P"
      "B.SearchRequest\032\".Acoustid.Server.PB.Sea"
      "rchResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1259);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "index.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_index_2eproto
namespace Acoustid {
namespace Server {
namespace PB {

// ===================================================================

void GetDocumentRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDocumentRequest::kIndexNameFieldNumber;
const int GetDocumentRequest::kDocIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDocumentRequest::GetDocumentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_GetDocumentRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.GetDocumentRequest)
}
GetDocumentRequest::GetDocumentRequest(const GetDocumentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_name().size() > 0) {
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  doc_id_ = from.doc_id_;
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.GetDocumentRequest)
}

void GetDocumentRequest::SharedCtor() {
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_id_ = 0u;
}

GetDocumentRequest::~GetDocumentRequest() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.GetDocumentRequest)
  SharedDtor();
}

void GetDocumentRequest::SharedDtor() {
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetDocumentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDocumentRequest::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDocumentRequest& GetDocumentRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_GetDocumentRequest.base);
  return *internal_default_instance();
}


void GetDocumentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.GetDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetDocumentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.GetDocumentRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string index_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_name().data(), static_cast<int>(this->index_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.GetDocumentRequest.index_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 doc_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &doc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.GetDocumentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.GetDocumentRequest)
  return false;
#undef DO_
}

void GetDocumentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.GetDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.GetDocumentRequest.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->index_name(), output);
  }

  // uint32 doc_id = 2;
  if (this->doc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->doc_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.GetDocumentRequest)
}

::google::protobuf::uint8* GetDocumentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.GetDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.GetDocumentRequest.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->index_name(), target);
  }

  // uint32 doc_id = 2;
  if (this->doc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->doc_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.GetDocumentRequest)
  return target;
}

size_t GetDocumentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.GetDocumentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string index_name = 1;
  if (this->index_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_name());
  }

  // uint32 doc_id = 2;
  if (this->doc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->doc_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDocumentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.GetDocumentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDocumentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDocumentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.GetDocumentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.GetDocumentRequest)
    MergeFrom(*source);
  }
}

void GetDocumentRequest::MergeFrom(const GetDocumentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.GetDocumentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index_name().size() > 0) {

    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  if (from.doc_id() != 0) {
    set_doc_id(from.doc_id());
  }
}

void GetDocumentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.GetDocumentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDocumentRequest::CopyFrom(const GetDocumentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.GetDocumentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDocumentRequest::IsInitialized() const {
  return true;
}

void GetDocumentRequest::Swap(GetDocumentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDocumentRequest::InternalSwap(GetDocumentRequest* other) {
  using std::swap;
  index_name_.Swap(&other->index_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(doc_id_, other->doc_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDocumentRequest::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDocumentResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDocumentResponse::kTermsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDocumentResponse::GetDocumentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_GetDocumentResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.GetDocumentResponse)
}
GetDocumentResponse::GetDocumentResponse(const GetDocumentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      terms_(from.terms_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.GetDocumentResponse)
}

void GetDocumentResponse::SharedCtor() {
}

GetDocumentResponse::~GetDocumentResponse() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.GetDocumentResponse)
  SharedDtor();
}

void GetDocumentResponse::SharedDtor() {
}

void GetDocumentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDocumentResponse::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDocumentResponse& GetDocumentResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_GetDocumentResponse.base);
  return *internal_default_instance();
}


void GetDocumentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.GetDocumentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  terms_.Clear();
  _internal_metadata_.Clear();
}

bool GetDocumentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.GetDocumentResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 terms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_terms())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_terms())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.GetDocumentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.GetDocumentResponse)
  return false;
#undef DO_
}

void GetDocumentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.GetDocumentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 terms = 2;
  if (this->terms_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _terms_cached_byte_size_));
  }
  for (int i = 0, n = this->terms_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->terms(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.GetDocumentResponse)
}

::google::protobuf::uint8* GetDocumentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.GetDocumentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 terms = 2;
  if (this->terms_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _terms_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->terms_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.GetDocumentResponse)
  return target;
}

size_t GetDocumentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.GetDocumentResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 terms = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->terms_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _terms_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDocumentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.GetDocumentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDocumentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDocumentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.GetDocumentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.GetDocumentResponse)
    MergeFrom(*source);
  }
}

void GetDocumentResponse::MergeFrom(const GetDocumentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.GetDocumentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  terms_.MergeFrom(from.terms_);
}

void GetDocumentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.GetDocumentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDocumentResponse::CopyFrom(const GetDocumentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.GetDocumentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDocumentResponse::IsInitialized() const {
  return true;
}

void GetDocumentResponse::Swap(GetDocumentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDocumentResponse::InternalSwap(GetDocumentResponse* other) {
  using std::swap;
  terms_.InternalSwap(&other->terms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDocumentResponse::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAttributeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAttributeRequest::kIndexNameFieldNumber;
const int GetAttributeRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAttributeRequest::GetAttributeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_GetAttributeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.GetAttributeRequest)
}
GetAttributeRequest::GetAttributeRequest(const GetAttributeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_name().size() > 0) {
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.GetAttributeRequest)
}

void GetAttributeRequest::SharedCtor() {
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetAttributeRequest::~GetAttributeRequest() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.GetAttributeRequest)
  SharedDtor();
}

void GetAttributeRequest::SharedDtor() {
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAttributeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAttributeRequest::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAttributeRequest& GetAttributeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_GetAttributeRequest.base);
  return *internal_default_instance();
}


void GetAttributeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.GetAttributeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetAttributeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.GetAttributeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string index_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_name().data(), static_cast<int>(this->index_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.GetAttributeRequest.index_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.GetAttributeRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.GetAttributeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.GetAttributeRequest)
  return false;
#undef DO_
}

void GetAttributeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.GetAttributeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.GetAttributeRequest.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->index_name(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.GetAttributeRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.GetAttributeRequest)
}

::google::protobuf::uint8* GetAttributeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.GetAttributeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.GetAttributeRequest.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->index_name(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.GetAttributeRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.GetAttributeRequest)
  return target;
}

size_t GetAttributeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.GetAttributeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string index_name = 1;
  if (this->index_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_name());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAttributeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.GetAttributeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAttributeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAttributeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.GetAttributeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.GetAttributeRequest)
    MergeFrom(*source);
  }
}

void GetAttributeRequest::MergeFrom(const GetAttributeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.GetAttributeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index_name().size() > 0) {

    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetAttributeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.GetAttributeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAttributeRequest::CopyFrom(const GetAttributeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.GetAttributeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAttributeRequest::IsInitialized() const {
  return true;
}

void GetAttributeRequest::Swap(GetAttributeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAttributeRequest::InternalSwap(GetAttributeRequest* other) {
  using std::swap;
  index_name_.Swap(&other->index_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAttributeRequest::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAttributeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAttributeResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAttributeResponse::GetAttributeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_GetAttributeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.GetAttributeResponse)
}
GetAttributeResponse::GetAttributeResponse(const GetAttributeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.GetAttributeResponse)
}

void GetAttributeResponse::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetAttributeResponse::~GetAttributeResponse() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.GetAttributeResponse)
  SharedDtor();
}

void GetAttributeResponse::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAttributeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAttributeResponse::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAttributeResponse& GetAttributeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_GetAttributeResponse.base);
  return *internal_default_instance();
}


void GetAttributeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.GetAttributeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetAttributeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.GetAttributeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.GetAttributeResponse.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.GetAttributeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.GetAttributeResponse)
  return false;
#undef DO_
}

void GetAttributeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.GetAttributeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.GetAttributeResponse.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.GetAttributeResponse)
}

::google::protobuf::uint8* GetAttributeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.GetAttributeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.GetAttributeResponse.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.GetAttributeResponse)
  return target;
}

size_t GetAttributeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.GetAttributeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAttributeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.GetAttributeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAttributeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAttributeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.GetAttributeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.GetAttributeResponse)
    MergeFrom(*source);
  }
}

void GetAttributeResponse::MergeFrom(const GetAttributeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.GetAttributeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void GetAttributeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.GetAttributeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAttributeResponse::CopyFrom(const GetAttributeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.GetAttributeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAttributeResponse::IsInitialized() const {
  return true;
}

void GetAttributeResponse::Swap(GetAttributeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAttributeResponse::InternalSwap(GetAttributeResponse* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAttributeResponse::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InsertOrUpdateDocumentOp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertOrUpdateDocumentOp::kDocIdFieldNumber;
const int InsertOrUpdateDocumentOp::kTermsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertOrUpdateDocumentOp::InsertOrUpdateDocumentOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_InsertOrUpdateDocumentOp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
}
InsertOrUpdateDocumentOp::InsertOrUpdateDocumentOp(const InsertOrUpdateDocumentOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      terms_(from.terms_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  doc_id_ = from.doc_id_;
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
}

void InsertOrUpdateDocumentOp::SharedCtor() {
  doc_id_ = 0u;
}

InsertOrUpdateDocumentOp::~InsertOrUpdateDocumentOp() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
  SharedDtor();
}

void InsertOrUpdateDocumentOp::SharedDtor() {
}

void InsertOrUpdateDocumentOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InsertOrUpdateDocumentOp::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InsertOrUpdateDocumentOp& InsertOrUpdateDocumentOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_InsertOrUpdateDocumentOp.base);
  return *internal_default_instance();
}


void InsertOrUpdateDocumentOp::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  terms_.Clear();
  doc_id_ = 0u;
  _internal_metadata_.Clear();
}

bool InsertOrUpdateDocumentOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 doc_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &doc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 terms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_terms())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_terms())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
  return false;
#undef DO_
}

void InsertOrUpdateDocumentOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 doc_id = 1;
  if (this->doc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->doc_id(), output);
  }

  // repeated uint32 terms = 2;
  if (this->terms_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _terms_cached_byte_size_));
  }
  for (int i = 0, n = this->terms_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->terms(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
}

::google::protobuf::uint8* InsertOrUpdateDocumentOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 doc_id = 1;
  if (this->doc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->doc_id(), target);
  }

  // repeated uint32 terms = 2;
  if (this->terms_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _terms_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->terms_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
  return target;
}

size_t InsertOrUpdateDocumentOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 terms = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->terms_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _terms_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 doc_id = 1;
  if (this->doc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->doc_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertOrUpdateDocumentOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertOrUpdateDocumentOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertOrUpdateDocumentOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
    MergeFrom(*source);
  }
}

void InsertOrUpdateDocumentOp::MergeFrom(const InsertOrUpdateDocumentOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  terms_.MergeFrom(from.terms_);
  if (from.doc_id() != 0) {
    set_doc_id(from.doc_id());
  }
}

void InsertOrUpdateDocumentOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertOrUpdateDocumentOp::CopyFrom(const InsertOrUpdateDocumentOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.InsertOrUpdateDocumentOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertOrUpdateDocumentOp::IsInitialized() const {
  return true;
}

void InsertOrUpdateDocumentOp::Swap(InsertOrUpdateDocumentOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertOrUpdateDocumentOp::InternalSwap(InsertOrUpdateDocumentOp* other) {
  using std::swap;
  terms_.InternalSwap(&other->terms_);
  swap(doc_id_, other->doc_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InsertOrUpdateDocumentOp::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteDocumentOp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteDocumentOp::kDocIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteDocumentOp::DeleteDocumentOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_DeleteDocumentOp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.DeleteDocumentOp)
}
DeleteDocumentOp::DeleteDocumentOp(const DeleteDocumentOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  doc_id_ = from.doc_id_;
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.DeleteDocumentOp)
}

void DeleteDocumentOp::SharedCtor() {
  doc_id_ = 0u;
}

DeleteDocumentOp::~DeleteDocumentOp() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.DeleteDocumentOp)
  SharedDtor();
}

void DeleteDocumentOp::SharedDtor() {
}

void DeleteDocumentOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteDocumentOp::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteDocumentOp& DeleteDocumentOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_DeleteDocumentOp.base);
  return *internal_default_instance();
}


void DeleteDocumentOp::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.DeleteDocumentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  doc_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DeleteDocumentOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.DeleteDocumentOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 doc_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &doc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.DeleteDocumentOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.DeleteDocumentOp)
  return false;
#undef DO_
}

void DeleteDocumentOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.DeleteDocumentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 doc_id = 1;
  if (this->doc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->doc_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.DeleteDocumentOp)
}

::google::protobuf::uint8* DeleteDocumentOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.DeleteDocumentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 doc_id = 1;
  if (this->doc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->doc_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.DeleteDocumentOp)
  return target;
}

size_t DeleteDocumentOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.DeleteDocumentOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 doc_id = 1;
  if (this->doc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->doc_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteDocumentOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.DeleteDocumentOp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteDocumentOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteDocumentOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.DeleteDocumentOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.DeleteDocumentOp)
    MergeFrom(*source);
  }
}

void DeleteDocumentOp::MergeFrom(const DeleteDocumentOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.DeleteDocumentOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.doc_id() != 0) {
    set_doc_id(from.doc_id());
  }
}

void DeleteDocumentOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.DeleteDocumentOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteDocumentOp::CopyFrom(const DeleteDocumentOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.DeleteDocumentOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDocumentOp::IsInitialized() const {
  return true;
}

void DeleteDocumentOp::Swap(DeleteDocumentOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteDocumentOp::InternalSwap(DeleteDocumentOp* other) {
  using std::swap;
  swap(doc_id_, other->doc_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteDocumentOp::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetAttributeOp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetAttributeOp::kNameFieldNumber;
const int SetAttributeOp::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetAttributeOp::SetAttributeOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_SetAttributeOp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.SetAttributeOp)
}
SetAttributeOp::SetAttributeOp(const SetAttributeOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.SetAttributeOp)
}

void SetAttributeOp::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetAttributeOp::~SetAttributeOp() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.SetAttributeOp)
  SharedDtor();
}

void SetAttributeOp::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetAttributeOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetAttributeOp::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetAttributeOp& SetAttributeOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_SetAttributeOp.base);
  return *internal_default_instance();
}


void SetAttributeOp::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.SetAttributeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetAttributeOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.SetAttributeOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.SetAttributeOp.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.SetAttributeOp.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.SetAttributeOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.SetAttributeOp)
  return false;
#undef DO_
}

void SetAttributeOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.SetAttributeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.SetAttributeOp.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.SetAttributeOp.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.SetAttributeOp)
}

::google::protobuf::uint8* SetAttributeOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.SetAttributeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.SetAttributeOp.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.SetAttributeOp.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.SetAttributeOp)
  return target;
}

size_t SetAttributeOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.SetAttributeOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAttributeOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.SetAttributeOp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAttributeOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetAttributeOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.SetAttributeOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.SetAttributeOp)
    MergeFrom(*source);
  }
}

void SetAttributeOp::MergeFrom(const SetAttributeOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.SetAttributeOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void SetAttributeOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.SetAttributeOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAttributeOp::CopyFrom(const SetAttributeOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.SetAttributeOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAttributeOp::IsInitialized() const {
  return true;
}

void SetAttributeOp::Swap(SetAttributeOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetAttributeOp::InternalSwap(SetAttributeOp* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetAttributeOp::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Operation::InitAsDefaultInstance() {
  ::Acoustid::Server::PB::_Operation_default_instance_.insert_or_update_document_ = const_cast< ::Acoustid::Server::PB::InsertOrUpdateDocumentOp*>(
      ::Acoustid::Server::PB::InsertOrUpdateDocumentOp::internal_default_instance());
  ::Acoustid::Server::PB::_Operation_default_instance_.delete_document_ = const_cast< ::Acoustid::Server::PB::DeleteDocumentOp*>(
      ::Acoustid::Server::PB::DeleteDocumentOp::internal_default_instance());
  ::Acoustid::Server::PB::_Operation_default_instance_.set_attribute_ = const_cast< ::Acoustid::Server::PB::SetAttributeOp*>(
      ::Acoustid::Server::PB::SetAttributeOp::internal_default_instance());
}
void Operation::set_allocated_insert_or_update_document(::Acoustid::Server::PB::InsertOrUpdateDocumentOp* insert_or_update_document) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (insert_or_update_document) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      insert_or_update_document = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, insert_or_update_document, submessage_arena);
    }
    set_has_insert_or_update_document();
    op_.insert_or_update_document_ = insert_or_update_document;
  }
  // @@protoc_insertion_point(field_set_allocated:Acoustid.Server.PB.Operation.insert_or_update_document)
}
void Operation::set_allocated_delete_document(::Acoustid::Server::PB::DeleteDocumentOp* delete_document) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (delete_document) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      delete_document = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_document, submessage_arena);
    }
    set_has_delete_document();
    op_.delete_document_ = delete_document;
  }
  // @@protoc_insertion_point(field_set_allocated:Acoustid.Server.PB.Operation.delete_document)
}
void Operation::set_allocated_set_attribute(::Acoustid::Server::PB::SetAttributeOp* set_attribute) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (set_attribute) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      set_attribute = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, set_attribute, submessage_arena);
    }
    set_has_set_attribute();
    op_.set_attribute_ = set_attribute;
  }
  // @@protoc_insertion_point(field_set_allocated:Acoustid.Server.PB.Operation.set_attribute)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Operation::kInsertOrUpdateDocumentFieldNumber;
const int Operation::kDeleteDocumentFieldNumber;
const int Operation::kSetAttributeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Operation::Operation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_Operation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.Operation)
}
Operation::Operation(const Operation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_op();
  switch (from.op_case()) {
    case kInsertOrUpdateDocument: {
      mutable_insert_or_update_document()->::Acoustid::Server::PB::InsertOrUpdateDocumentOp::MergeFrom(from.insert_or_update_document());
      break;
    }
    case kDeleteDocument: {
      mutable_delete_document()->::Acoustid::Server::PB::DeleteDocumentOp::MergeFrom(from.delete_document());
      break;
    }
    case kSetAttribute: {
      mutable_set_attribute()->::Acoustid::Server::PB::SetAttributeOp::MergeFrom(from.set_attribute());
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.Operation)
}

void Operation::SharedCtor() {
  clear_has_op();
}

Operation::~Operation() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.Operation)
  SharedDtor();
}

void Operation::SharedDtor() {
  if (has_op()) {
    clear_op();
  }
}

void Operation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Operation::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Operation& Operation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_Operation.base);
  return *internal_default_instance();
}


void Operation::clear_op() {
// @@protoc_insertion_point(one_of_clear_start:Acoustid.Server.PB.Operation)
  switch (op_case()) {
    case kInsertOrUpdateDocument: {
      delete op_.insert_or_update_document_;
      break;
    }
    case kDeleteDocument: {
      delete op_.delete_document_;
      break;
    }
    case kSetAttribute: {
      delete op_.set_attribute_;
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OP_NOT_SET;
}


void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_op();
  _internal_metadata_.Clear();
}

bool Operation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.Operation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Acoustid.Server.PB.InsertOrUpdateDocumentOp insert_or_update_document = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_insert_or_update_document()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Acoustid.Server.PB.DeleteDocumentOp delete_document = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delete_document()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Acoustid.Server.PB.SetAttributeOp set_attribute = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_attribute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.Operation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.Operation)
  return false;
#undef DO_
}

void Operation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Acoustid.Server.PB.InsertOrUpdateDocumentOp insert_or_update_document = 1;
  if (has_insert_or_update_document()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_insert_or_update_document(), output);
  }

  // .Acoustid.Server.PB.DeleteDocumentOp delete_document = 2;
  if (has_delete_document()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_delete_document(), output);
  }

  // .Acoustid.Server.PB.SetAttributeOp set_attribute = 3;
  if (has_set_attribute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_set_attribute(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.Operation)
}

::google::protobuf::uint8* Operation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Acoustid.Server.PB.InsertOrUpdateDocumentOp insert_or_update_document = 1;
  if (has_insert_or_update_document()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_insert_or_update_document(), deterministic, target);
  }

  // .Acoustid.Server.PB.DeleteDocumentOp delete_document = 2;
  if (has_delete_document()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_delete_document(), deterministic, target);
  }

  // .Acoustid.Server.PB.SetAttributeOp set_attribute = 3;
  if (has_set_attribute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_set_attribute(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.Operation)
  return target;
}

size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.Operation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (op_case()) {
    // .Acoustid.Server.PB.InsertOrUpdateDocumentOp insert_or_update_document = 1;
    case kInsertOrUpdateDocument: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.insert_or_update_document_);
      break;
    }
    // .Acoustid.Server.PB.DeleteDocumentOp delete_document = 2;
    case kDeleteDocument: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.delete_document_);
      break;
    }
    // .Acoustid.Server.PB.SetAttributeOp set_attribute = 3;
    case kSetAttribute: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.set_attribute_);
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Operation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  const Operation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Operation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.Operation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.Operation)
    MergeFrom(*source);
  }
}

void Operation::MergeFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.op_case()) {
    case kInsertOrUpdateDocument: {
      mutable_insert_or_update_document()->::Acoustid::Server::PB::InsertOrUpdateDocumentOp::MergeFrom(from.insert_or_update_document());
      break;
    }
    case kDeleteDocument: {
      mutable_delete_document()->::Acoustid::Server::PB::DeleteDocumentOp::MergeFrom(from.delete_document());
      break;
    }
    case kSetAttribute: {
      mutable_set_attribute()->::Acoustid::Server::PB::SetAttributeOp::MergeFrom(from.set_attribute());
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
}

void Operation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation::IsInitialized() const {
  return true;
}

void Operation::Swap(Operation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Operation::InternalSwap(Operation* other) {
  using std::swap;
  swap(op_, other->op_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Operation::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateRequest::kIndexNameFieldNumber;
const int UpdateRequest::kOpsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRequest::UpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_UpdateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.UpdateRequest)
}
UpdateRequest::UpdateRequest(const UpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ops_(from.ops_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_name().size() > 0) {
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.UpdateRequest)
}

void UpdateRequest::SharedCtor() {
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UpdateRequest::~UpdateRequest() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.UpdateRequest)
  SharedDtor();
}

void UpdateRequest::SharedDtor() {
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateRequest::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateRequest& UpdateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_UpdateRequest.base);
  return *internal_default_instance();
}


void UpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.UpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ops_.Clear();
  index_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.UpdateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string index_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_name().data(), static_cast<int>(this->index_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.UpdateRequest.index_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Acoustid.Server.PB.Operation ops = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ops()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.UpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.UpdateRequest)
  return false;
#undef DO_
}

void UpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.UpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.UpdateRequest.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->index_name(), output);
  }

  // repeated .Acoustid.Server.PB.Operation ops = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ops_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->ops(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.UpdateRequest)
}

::google::protobuf::uint8* UpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.UpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.UpdateRequest.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->index_name(), target);
  }

  // repeated .Acoustid.Server.PB.Operation ops = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ops_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->ops(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.UpdateRequest)
  return target;
}

size_t UpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.UpdateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Acoustid.Server.PB.Operation ops = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ops_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ops(static_cast<int>(i)));
    }
  }

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.UpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.UpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.UpdateRequest)
    MergeFrom(*source);
  }
}

void UpdateRequest::MergeFrom(const UpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.UpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ops_.MergeFrom(from.ops_);
  if (from.index_name().size() > 0) {

    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
}

void UpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.UpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRequest::CopyFrom(const UpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.UpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRequest::IsInitialized() const {
  return true;
}

void UpdateRequest::Swap(UpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRequest::InternalSwap(UpdateRequest* other) {
  using std::swap;
  CastToBase(&ops_)->InternalSwap(CastToBase(&other->ops_));
  index_name_.Swap(&other->index_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateRequest::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateResponse::UpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_UpdateResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.UpdateResponse)
}
UpdateResponse::UpdateResponse(const UpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.UpdateResponse)
}

void UpdateResponse::SharedCtor() {
}

UpdateResponse::~UpdateResponse() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.UpdateResponse)
  SharedDtor();
}

void UpdateResponse::SharedDtor() {
}

void UpdateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateResponse::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateResponse& UpdateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_UpdateResponse.base);
  return *internal_default_instance();
}


void UpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.UpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool UpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.UpdateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.UpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.UpdateResponse)
  return false;
#undef DO_
}

void UpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.UpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.UpdateResponse)
}

::google::protobuf::uint8* UpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.UpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.UpdateResponse)
  return target;
}

size_t UpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.UpdateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.UpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.UpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.UpdateResponse)
    MergeFrom(*source);
  }
}

void UpdateResponse::MergeFrom(const UpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.UpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.UpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateResponse::CopyFrom(const UpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.UpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateResponse::IsInitialized() const {
  return true;
}

void UpdateResponse::Swap(UpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateResponse::InternalSwap(UpdateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateResponse::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchResult::kDocIdFieldNumber;
const int SearchResult::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchResult::SearchResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_SearchResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.SearchResult)
}
SearchResult::SearchResult(const SearchResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&doc_id_, &from.doc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&doc_id_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.SearchResult)
}

void SearchResult::SharedCtor() {
  ::memset(&doc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&doc_id_)) + sizeof(score_));
}

SearchResult::~SearchResult() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.SearchResult)
  SharedDtor();
}

void SearchResult::SharedDtor() {
}

void SearchResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchResult::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchResult& SearchResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_SearchResult.base);
  return *internal_default_instance();
}


void SearchResult::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.SearchResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&doc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&doc_id_)) + sizeof(score_));
  _internal_metadata_.Clear();
}

bool SearchResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.SearchResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 doc_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &doc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.SearchResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.SearchResult)
  return false;
#undef DO_
}

void SearchResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.SearchResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 doc_id = 1;
  if (this->doc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->doc_id(), output);
  }

  // float score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->score(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.SearchResult)
}

::google::protobuf::uint8* SearchResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.SearchResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 doc_id = 1;
  if (this->doc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->doc_id(), target);
  }

  // float score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->score(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.SearchResult)
  return target;
}

size_t SearchResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.SearchResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 doc_id = 1;
  if (this->doc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->doc_id());
  }

  // float score = 2;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.SearchResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.SearchResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.SearchResult)
    MergeFrom(*source);
  }
}

void SearchResult::MergeFrom(const SearchResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.SearchResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.doc_id() != 0) {
    set_doc_id(from.doc_id());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void SearchResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchResult::CopyFrom(const SearchResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchResult::IsInitialized() const {
  return true;
}

void SearchResult::Swap(SearchResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchResult::InternalSwap(SearchResult* other) {
  using std::swap;
  swap(doc_id_, other->doc_id_);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchResult::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchRequest::kIndexNameFieldNumber;
const int SearchRequest::kTermsFieldNumber;
const int SearchRequest::kMaxResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchRequest::SearchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_SearchRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.SearchRequest)
}
SearchRequest::SearchRequest(const SearchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      terms_(from.terms_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_name().size() > 0) {
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  max_results_ = from.max_results_;
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.SearchRequest)
}

void SearchRequest::SharedCtor() {
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_results_ = 0;
}

SearchRequest::~SearchRequest() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.SearchRequest)
  SharedDtor();
}

void SearchRequest::SharedDtor() {
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchRequest::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchRequest& SearchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_SearchRequest.base);
  return *internal_default_instance();
}


void SearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  terms_.Clear();
  index_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_results_ = 0;
  _internal_metadata_.Clear();
}

bool SearchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.SearchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string index_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_name().data(), static_cast<int>(this->index_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.SearchRequest.index_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 terms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_terms())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_terms())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.SearchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.SearchRequest)
  return false;
#undef DO_
}

void SearchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.SearchRequest.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->index_name(), output);
  }

  // repeated uint32 terms = 2;
  if (this->terms_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _terms_cached_byte_size_));
  }
  for (int i = 0, n = this->terms_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->terms(i), output);
  }

  // int32 max_results = 3;
  if (this->max_results() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_results(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.SearchRequest)
}

::google::protobuf::uint8* SearchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.SearchRequest.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->index_name(), target);
  }

  // repeated uint32 terms = 2;
  if (this->terms_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _terms_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->terms_, target);
  }

  // int32 max_results = 3;
  if (this->max_results() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_results(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.SearchRequest)
  return target;
}

size_t SearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.SearchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 terms = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->terms_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _terms_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_name());
  }

  // int32 max_results = 3;
  if (this->max_results() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_results());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.SearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.SearchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.SearchRequest)
    MergeFrom(*source);
  }
}

void SearchRequest::MergeFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.SearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  terms_.MergeFrom(from.terms_);
  if (from.index_name().size() > 0) {

    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  if (from.max_results() != 0) {
    set_max_results(from.max_results());
  }
}

void SearchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchRequest::CopyFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRequest::IsInitialized() const {
  return true;
}

void SearchRequest::Swap(SearchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchRequest::InternalSwap(SearchRequest* other) {
  using std::swap;
  terms_.InternalSwap(&other->terms_);
  index_name_.Swap(&other->index_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(max_results_, other->max_results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchRequest::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchResponse::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchResponse::SearchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_SearchResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.SearchResponse)
}
SearchResponse::SearchResponse(const SearchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.SearchResponse)
}

void SearchResponse::SharedCtor() {
}

SearchResponse::~SearchResponse() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.SearchResponse)
  SharedDtor();
}

void SearchResponse::SharedDtor() {
}

void SearchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchResponse::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchResponse& SearchResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_SearchResponse.base);
  return *internal_default_instance();
}


void SearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.SearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear();
}

bool SearchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.SearchResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Acoustid.Server.PB.SearchResult results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.SearchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.SearchResponse)
  return false;
#undef DO_
}

void SearchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.SearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Acoustid.Server.PB.SearchResult results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->results(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.SearchResponse)
}

::google::protobuf::uint8* SearchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.SearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Acoustid.Server.PB.SearchResult results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.SearchResponse)
  return target;
}

size_t SearchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.SearchResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Acoustid.Server.PB.SearchResult results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.SearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.SearchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.SearchResponse)
    MergeFrom(*source);
  }
}

void SearchResponse::MergeFrom(const SearchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.SearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void SearchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.SearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchResponse::CopyFrom(const SearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.SearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchResponse::IsInitialized() const {
  return true;
}

void SearchResponse::Swap(SearchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchResponse::InternalSwap(SearchResponse* other) {
  using std::swap;
  CastToBase(&results_)->InternalSwap(CastToBase(&other->results_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchResponse::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace PB
}  // namespace Server
}  // namespace Acoustid
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::GetDocumentRequest* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::GetDocumentRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::GetDocumentRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::GetDocumentResponse* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::GetDocumentResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::GetDocumentResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::GetAttributeRequest* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::GetAttributeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::GetAttributeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::GetAttributeResponse* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::GetAttributeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::GetAttributeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::InsertOrUpdateDocumentOp* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::InsertOrUpdateDocumentOp >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::InsertOrUpdateDocumentOp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::DeleteDocumentOp* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::DeleteDocumentOp >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::DeleteDocumentOp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::SetAttributeOp* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::SetAttributeOp >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::SetAttributeOp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::Operation* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::Operation >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::Operation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::UpdateRequest* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::UpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::UpdateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::UpdateResponse* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::UpdateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::UpdateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::SearchResult* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::SearchResult >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::SearchResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::SearchRequest* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::SearchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::SearchRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::SearchResponse* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::SearchResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::SearchResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
