// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: index.proto

#include "index.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_index_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_index_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SearchResult;
}  // namespace protobuf_index_2eproto
namespace Acoustid {
namespace Server {
namespace PB {
class GetIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetIndexRequest>
      _instance;
} _GetIndexRequest_default_instance_;
class GetIndexResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetIndexResponse>
      _instance;
} _GetIndexResponse_default_instance_;
class CreateIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateIndexRequest>
      _instance;
} _CreateIndexRequest_default_instance_;
class CreateIndexResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateIndexResponse>
      _instance;
} _CreateIndexResponse_default_instance_;
class DeleteIndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteIndexRequest>
      _instance;
} _DeleteIndexRequest_default_instance_;
class DeleteIndexResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteIndexResponse>
      _instance;
} _DeleteIndexResponse_default_instance_;
class GetDocumentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDocumentRequest>
      _instance;
} _GetDocumentRequest_default_instance_;
class GetDocumentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDocumentResponse>
      _instance;
} _GetDocumentResponse_default_instance_;
class InsertOrUpdateDocumentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InsertOrUpdateDocumentRequest>
      _instance;
} _InsertOrUpdateDocumentRequest_default_instance_;
class InsertOrUpdateDocumentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InsertOrUpdateDocumentResponse>
      _instance;
} _InsertOrUpdateDocumentResponse_default_instance_;
class DeleteDocumentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteDocumentRequest>
      _instance;
} _DeleteDocumentRequest_default_instance_;
class DeleteDocumentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteDocumentResponse>
      _instance;
} _DeleteDocumentResponse_default_instance_;
class SearchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchRequest>
      _instance;
} _SearchRequest_default_instance_;
class SearchResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchResult>
      _instance;
} _SearchResult_default_instance_;
class SearchResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchResponse>
      _instance;
} _SearchResponse_default_instance_;
}  // namespace PB
}  // namespace Server
}  // namespace Acoustid
namespace protobuf_index_2eproto {
static void InitDefaultsGetIndexRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_GetIndexRequest_default_instance_;
    new (ptr) ::Acoustid::Server::PB::GetIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::GetIndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetIndexRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetIndexRequest}, {}};

static void InitDefaultsGetIndexResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_GetIndexResponse_default_instance_;
    new (ptr) ::Acoustid::Server::PB::GetIndexResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::GetIndexResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetIndexResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetIndexResponse}, {}};

static void InitDefaultsCreateIndexRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_CreateIndexRequest_default_instance_;
    new (ptr) ::Acoustid::Server::PB::CreateIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::CreateIndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateIndexRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateIndexRequest}, {}};

static void InitDefaultsCreateIndexResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_CreateIndexResponse_default_instance_;
    new (ptr) ::Acoustid::Server::PB::CreateIndexResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::CreateIndexResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateIndexResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateIndexResponse}, {}};

static void InitDefaultsDeleteIndexRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_DeleteIndexRequest_default_instance_;
    new (ptr) ::Acoustid::Server::PB::DeleteIndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::DeleteIndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteIndexRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteIndexRequest}, {}};

static void InitDefaultsDeleteIndexResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_DeleteIndexResponse_default_instance_;
    new (ptr) ::Acoustid::Server::PB::DeleteIndexResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::DeleteIndexResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteIndexResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteIndexResponse}, {}};

static void InitDefaultsGetDocumentRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_GetDocumentRequest_default_instance_;
    new (ptr) ::Acoustid::Server::PB::GetDocumentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::GetDocumentRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetDocumentRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetDocumentRequest}, {}};

static void InitDefaultsGetDocumentResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_GetDocumentResponse_default_instance_;
    new (ptr) ::Acoustid::Server::PB::GetDocumentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::GetDocumentResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetDocumentResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetDocumentResponse}, {}};

static void InitDefaultsInsertOrUpdateDocumentRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_InsertOrUpdateDocumentRequest_default_instance_;
    new (ptr) ::Acoustid::Server::PB::InsertOrUpdateDocumentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::InsertOrUpdateDocumentRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InsertOrUpdateDocumentRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInsertOrUpdateDocumentRequest}, {}};

static void InitDefaultsInsertOrUpdateDocumentResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_InsertOrUpdateDocumentResponse_default_instance_;
    new (ptr) ::Acoustid::Server::PB::InsertOrUpdateDocumentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::InsertOrUpdateDocumentResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InsertOrUpdateDocumentResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInsertOrUpdateDocumentResponse}, {}};

static void InitDefaultsDeleteDocumentRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_DeleteDocumentRequest_default_instance_;
    new (ptr) ::Acoustid::Server::PB::DeleteDocumentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::DeleteDocumentRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteDocumentRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteDocumentRequest}, {}};

static void InitDefaultsDeleteDocumentResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_DeleteDocumentResponse_default_instance_;
    new (ptr) ::Acoustid::Server::PB::DeleteDocumentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::DeleteDocumentResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteDocumentResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteDocumentResponse}, {}};

static void InitDefaultsSearchRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_SearchRequest_default_instance_;
    new (ptr) ::Acoustid::Server::PB::SearchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::SearchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SearchRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSearchRequest}, {}};

static void InitDefaultsSearchResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_SearchResult_default_instance_;
    new (ptr) ::Acoustid::Server::PB::SearchResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::SearchResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SearchResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSearchResult}, {}};

static void InitDefaultsSearchResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Acoustid::Server::PB::_SearchResponse_default_instance_;
    new (ptr) ::Acoustid::Server::PB::SearchResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acoustid::Server::PB::SearchResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SearchResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSearchResponse}, {
      &protobuf_index_2eproto::scc_info_SearchResult.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetIndexRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetIndexResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateIndexRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateIndexResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteIndexRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteIndexResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDocumentRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDocumentResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InsertOrUpdateDocumentRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InsertOrUpdateDocumentResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteDocumentRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteDocumentResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchResponse.base);
}

::google::protobuf::Metadata file_level_metadata[15];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetIndexRequest, index_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetIndexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::CreateIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::CreateIndexRequest, index_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::CreateIndexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::DeleteIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::DeleteIndexRequest, index_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::DeleteIndexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetDocumentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetDocumentRequest, index_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetDocumentRequest, doc_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetDocumentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::GetDocumentResponse, terms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::InsertOrUpdateDocumentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::InsertOrUpdateDocumentRequest, index_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::InsertOrUpdateDocumentRequest, doc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::InsertOrUpdateDocumentRequest, terms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::InsertOrUpdateDocumentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::DeleteDocumentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::DeleteDocumentRequest, index_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::DeleteDocumentRequest, doc_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::DeleteDocumentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchRequest, index_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchRequest, terms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchRequest, max_results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchResult, doc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchResult, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acoustid::Server::PB::SearchResponse, results_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Acoustid::Server::PB::GetIndexRequest)},
  { 6, -1, sizeof(::Acoustid::Server::PB::GetIndexResponse)},
  { 11, -1, sizeof(::Acoustid::Server::PB::CreateIndexRequest)},
  { 17, -1, sizeof(::Acoustid::Server::PB::CreateIndexResponse)},
  { 22, -1, sizeof(::Acoustid::Server::PB::DeleteIndexRequest)},
  { 28, -1, sizeof(::Acoustid::Server::PB::DeleteIndexResponse)},
  { 33, -1, sizeof(::Acoustid::Server::PB::GetDocumentRequest)},
  { 40, -1, sizeof(::Acoustid::Server::PB::GetDocumentResponse)},
  { 46, -1, sizeof(::Acoustid::Server::PB::InsertOrUpdateDocumentRequest)},
  { 54, -1, sizeof(::Acoustid::Server::PB::InsertOrUpdateDocumentResponse)},
  { 59, -1, sizeof(::Acoustid::Server::PB::DeleteDocumentRequest)},
  { 66, -1, sizeof(::Acoustid::Server::PB::DeleteDocumentResponse)},
  { 71, -1, sizeof(::Acoustid::Server::PB::SearchRequest)},
  { 79, -1, sizeof(::Acoustid::Server::PB::SearchResult)},
  { 86, -1, sizeof(::Acoustid::Server::PB::SearchResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_GetIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_GetIndexResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_CreateIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_CreateIndexResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_DeleteIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_DeleteIndexResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_GetDocumentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_GetDocumentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_InsertOrUpdateDocumentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_InsertOrUpdateDocumentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_DeleteDocumentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_DeleteDocumentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_SearchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_SearchResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Acoustid::Server::PB::_SearchResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "index.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013index.proto\022\022Acoustid.Server.PB\"%\n\017Get"
      "IndexRequest\022\022\n\nindex_name\030\001 \001(\t\"\022\n\020GetI"
      "ndexResponse\"(\n\022CreateIndexRequest\022\022\n\nin"
      "dex_name\030\001 \001(\t\"\025\n\023CreateIndexResponse\"(\n"
      "\022DeleteIndexRequest\022\022\n\nindex_name\030\001 \001(\t\""
      "\025\n\023DeleteIndexResponse\"8\n\022GetDocumentReq"
      "uest\022\022\n\nindex_name\030\001 \001(\t\022\016\n\006doc_id\030\002 \001(\r"
      "\"$\n\023GetDocumentResponse\022\r\n\005terms\030\001 \003(\r\"R"
      "\n\035InsertOrUpdateDocumentRequest\022\022\n\nindex"
      "_name\030\001 \001(\t\022\016\n\006doc_id\030\002 \001(\r\022\r\n\005terms\030\003 \003"
      "(\r\" \n\036InsertOrUpdateDocumentResponse\";\n\025"
      "DeleteDocumentRequest\022\022\n\nindex_name\030\001 \001("
      "\t\022\016\n\006doc_id\030\002 \001(\r\"\030\n\026DeleteDocumentRespo"
      "nse\"G\n\rSearchRequest\022\022\n\nindex_name\030\001 \001(\t"
      "\022\r\n\005terms\030\002 \003(\r\022\023\n\013max_results\030\003 \001(\005\"-\n\014"
      "SearchResult\022\016\n\006doc_id\030\001 \001(\r\022\r\n\005score\030\002 "
      "\001(\002\"C\n\016SearchResponse\0221\n\007results\030\001 \003(\0132 "
      ".Acoustid.Server.PB.SearchResult2\271\005\n\005Ind"
      "ex\022U\n\010GetIndex\022#.Acoustid.Server.PB.GetI"
      "ndexRequest\032$.Acoustid.Server.PB.GetInde"
      "xResponse\022^\n\013CreateIndex\022&.Acoustid.Serv"
      "er.PB.CreateIndexRequest\032\'.Acoustid.Serv"
      "er.PB.CreateIndexResponse\022^\n\013DeleteIndex"
      "\022&.Acoustid.Server.PB.DeleteIndexRequest"
      "\032\'.Acoustid.Server.PB.DeleteIndexRespons"
      "e\022^\n\013GetDocument\022&.Acoustid.Server.PB.Ge"
      "tDocumentRequest\032\'.Acoustid.Server.PB.Ge"
      "tDocumentResponse\022\177\n\026InsertOrUpdateDocum"
      "ent\0221.Acoustid.Server.PB.InsertOrUpdateD"
      "ocumentRequest\0322.Acoustid.Server.PB.Inse"
      "rtOrUpdateDocumentResponse\022g\n\016DeleteDocu"
      "ment\022).Acoustid.Server.PB.DeleteDocument"
      "Request\032*.Acoustid.Server.PB.DeleteDocum"
      "entResponse\022O\n\006Search\022!.Acoustid.Server."
      "PB.SearchRequest\032\".Acoustid.Server.PB.Se"
      "archResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1420);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "index.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_index_2eproto
namespace Acoustid {
namespace Server {
namespace PB {

// ===================================================================

void GetIndexRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetIndexRequest::kIndexNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetIndexRequest::GetIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_GetIndexRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.GetIndexRequest)
}
GetIndexRequest::GetIndexRequest(const GetIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_name().size() > 0) {
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.GetIndexRequest)
}

void GetIndexRequest::SharedCtor() {
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetIndexRequest::~GetIndexRequest() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.GetIndexRequest)
  SharedDtor();
}

void GetIndexRequest::SharedDtor() {
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetIndexRequest::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetIndexRequest& GetIndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_GetIndexRequest.base);
  return *internal_default_instance();
}


void GetIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.GetIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.GetIndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string index_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_name().data(), static_cast<int>(this->index_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.GetIndexRequest.index_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.GetIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.GetIndexRequest)
  return false;
#undef DO_
}

void GetIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.GetIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.GetIndexRequest.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->index_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.GetIndexRequest)
}

::google::protobuf::uint8* GetIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.GetIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.GetIndexRequest.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->index_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.GetIndexRequest)
  return target;
}

size_t GetIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.GetIndexRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string index_name = 1;
  if (this->index_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.GetIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.GetIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.GetIndexRequest)
    MergeFrom(*source);
  }
}

void GetIndexRequest::MergeFrom(const GetIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.GetIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index_name().size() > 0) {

    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
}

void GetIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.GetIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIndexRequest::CopyFrom(const GetIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.GetIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIndexRequest::IsInitialized() const {
  return true;
}

void GetIndexRequest::Swap(GetIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetIndexRequest::InternalSwap(GetIndexRequest* other) {
  using std::swap;
  index_name_.Swap(&other->index_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetIndexRequest::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetIndexResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetIndexResponse::GetIndexResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_GetIndexResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.GetIndexResponse)
}
GetIndexResponse::GetIndexResponse(const GetIndexResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.GetIndexResponse)
}

void GetIndexResponse::SharedCtor() {
}

GetIndexResponse::~GetIndexResponse() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.GetIndexResponse)
  SharedDtor();
}

void GetIndexResponse::SharedDtor() {
}

void GetIndexResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetIndexResponse::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetIndexResponse& GetIndexResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_GetIndexResponse.base);
  return *internal_default_instance();
}


void GetIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.GetIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetIndexResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.GetIndexResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.GetIndexResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.GetIndexResponse)
  return false;
#undef DO_
}

void GetIndexResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.GetIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.GetIndexResponse)
}

::google::protobuf::uint8* GetIndexResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.GetIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.GetIndexResponse)
  return target;
}

size_t GetIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.GetIndexResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIndexResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.GetIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIndexResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetIndexResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.GetIndexResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.GetIndexResponse)
    MergeFrom(*source);
  }
}

void GetIndexResponse::MergeFrom(const GetIndexResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.GetIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetIndexResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.GetIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIndexResponse::CopyFrom(const GetIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.GetIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIndexResponse::IsInitialized() const {
  return true;
}

void GetIndexResponse::Swap(GetIndexResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetIndexResponse::InternalSwap(GetIndexResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetIndexResponse::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateIndexRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateIndexRequest::kIndexNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateIndexRequest::CreateIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_CreateIndexRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.CreateIndexRequest)
}
CreateIndexRequest::CreateIndexRequest(const CreateIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_name().size() > 0) {
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.CreateIndexRequest)
}

void CreateIndexRequest::SharedCtor() {
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateIndexRequest::~CreateIndexRequest() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.CreateIndexRequest)
  SharedDtor();
}

void CreateIndexRequest::SharedDtor() {
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateIndexRequest::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateIndexRequest& CreateIndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_CreateIndexRequest.base);
  return *internal_default_instance();
}


void CreateIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.CreateIndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string index_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_name().data(), static_cast<int>(this->index_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.CreateIndexRequest.index_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.CreateIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.CreateIndexRequest)
  return false;
#undef DO_
}

void CreateIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.CreateIndexRequest.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->index_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.CreateIndexRequest)
}

::google::protobuf::uint8* CreateIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.CreateIndexRequest.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->index_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.CreateIndexRequest)
  return target;
}

size_t CreateIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.CreateIndexRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string index_name = 1;
  if (this->index_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.CreateIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.CreateIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.CreateIndexRequest)
    MergeFrom(*source);
  }
}

void CreateIndexRequest::MergeFrom(const CreateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.CreateIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index_name().size() > 0) {

    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
}

void CreateIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.CreateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateIndexRequest::CopyFrom(const CreateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.CreateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateIndexRequest::IsInitialized() const {
  return true;
}

void CreateIndexRequest::Swap(CreateIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateIndexRequest::InternalSwap(CreateIndexRequest* other) {
  using std::swap;
  index_name_.Swap(&other->index_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateIndexRequest::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateIndexResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateIndexResponse::CreateIndexResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_CreateIndexResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.CreateIndexResponse)
}
CreateIndexResponse::CreateIndexResponse(const CreateIndexResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.CreateIndexResponse)
}

void CreateIndexResponse::SharedCtor() {
}

CreateIndexResponse::~CreateIndexResponse() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.CreateIndexResponse)
  SharedDtor();
}

void CreateIndexResponse::SharedDtor() {
}

void CreateIndexResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateIndexResponse::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateIndexResponse& CreateIndexResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_CreateIndexResponse.base);
  return *internal_default_instance();
}


void CreateIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.CreateIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CreateIndexResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.CreateIndexResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.CreateIndexResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.CreateIndexResponse)
  return false;
#undef DO_
}

void CreateIndexResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.CreateIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.CreateIndexResponse)
}

::google::protobuf::uint8* CreateIndexResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.CreateIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.CreateIndexResponse)
  return target;
}

size_t CreateIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.CreateIndexResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateIndexResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.CreateIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateIndexResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateIndexResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.CreateIndexResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.CreateIndexResponse)
    MergeFrom(*source);
  }
}

void CreateIndexResponse::MergeFrom(const CreateIndexResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.CreateIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateIndexResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.CreateIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateIndexResponse::CopyFrom(const CreateIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.CreateIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateIndexResponse::IsInitialized() const {
  return true;
}

void CreateIndexResponse::Swap(CreateIndexResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateIndexResponse::InternalSwap(CreateIndexResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateIndexResponse::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteIndexRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteIndexRequest::kIndexNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteIndexRequest::DeleteIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_DeleteIndexRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.DeleteIndexRequest)
}
DeleteIndexRequest::DeleteIndexRequest(const DeleteIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_name().size() > 0) {
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.DeleteIndexRequest)
}

void DeleteIndexRequest::SharedCtor() {
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteIndexRequest::~DeleteIndexRequest() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.DeleteIndexRequest)
  SharedDtor();
}

void DeleteIndexRequest::SharedDtor() {
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteIndexRequest::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteIndexRequest& DeleteIndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_DeleteIndexRequest.base);
  return *internal_default_instance();
}


void DeleteIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.DeleteIndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string index_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_name().data(), static_cast<int>(this->index_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.DeleteIndexRequest.index_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.DeleteIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.DeleteIndexRequest)
  return false;
#undef DO_
}

void DeleteIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.DeleteIndexRequest.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->index_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.DeleteIndexRequest)
}

::google::protobuf::uint8* DeleteIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.DeleteIndexRequest.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->index_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.DeleteIndexRequest)
  return target;
}

size_t DeleteIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.DeleteIndexRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string index_name = 1;
  if (this->index_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.DeleteIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.DeleteIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.DeleteIndexRequest)
    MergeFrom(*source);
  }
}

void DeleteIndexRequest::MergeFrom(const DeleteIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.DeleteIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index_name().size() > 0) {

    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
}

void DeleteIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.DeleteIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIndexRequest::CopyFrom(const DeleteIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.DeleteIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIndexRequest::IsInitialized() const {
  return true;
}

void DeleteIndexRequest::Swap(DeleteIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteIndexRequest::InternalSwap(DeleteIndexRequest* other) {
  using std::swap;
  index_name_.Swap(&other->index_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteIndexRequest::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteIndexResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteIndexResponse::DeleteIndexResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_DeleteIndexResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.DeleteIndexResponse)
}
DeleteIndexResponse::DeleteIndexResponse(const DeleteIndexResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.DeleteIndexResponse)
}

void DeleteIndexResponse::SharedCtor() {
}

DeleteIndexResponse::~DeleteIndexResponse() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.DeleteIndexResponse)
  SharedDtor();
}

void DeleteIndexResponse::SharedDtor() {
}

void DeleteIndexResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteIndexResponse::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteIndexResponse& DeleteIndexResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_DeleteIndexResponse.base);
  return *internal_default_instance();
}


void DeleteIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.DeleteIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DeleteIndexResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.DeleteIndexResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.DeleteIndexResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.DeleteIndexResponse)
  return false;
#undef DO_
}

void DeleteIndexResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.DeleteIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.DeleteIndexResponse)
}

::google::protobuf::uint8* DeleteIndexResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.DeleteIndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.DeleteIndexResponse)
  return target;
}

size_t DeleteIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.DeleteIndexResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteIndexResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.DeleteIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIndexResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteIndexResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.DeleteIndexResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.DeleteIndexResponse)
    MergeFrom(*source);
  }
}

void DeleteIndexResponse::MergeFrom(const DeleteIndexResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.DeleteIndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteIndexResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.DeleteIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIndexResponse::CopyFrom(const DeleteIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.DeleteIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIndexResponse::IsInitialized() const {
  return true;
}

void DeleteIndexResponse::Swap(DeleteIndexResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteIndexResponse::InternalSwap(DeleteIndexResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteIndexResponse::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDocumentRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDocumentRequest::kIndexNameFieldNumber;
const int GetDocumentRequest::kDocIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDocumentRequest::GetDocumentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_GetDocumentRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.GetDocumentRequest)
}
GetDocumentRequest::GetDocumentRequest(const GetDocumentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_name().size() > 0) {
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  doc_id_ = from.doc_id_;
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.GetDocumentRequest)
}

void GetDocumentRequest::SharedCtor() {
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_id_ = 0u;
}

GetDocumentRequest::~GetDocumentRequest() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.GetDocumentRequest)
  SharedDtor();
}

void GetDocumentRequest::SharedDtor() {
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetDocumentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDocumentRequest::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDocumentRequest& GetDocumentRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_GetDocumentRequest.base);
  return *internal_default_instance();
}


void GetDocumentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.GetDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetDocumentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.GetDocumentRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string index_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_name().data(), static_cast<int>(this->index_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.GetDocumentRequest.index_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 doc_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &doc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.GetDocumentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.GetDocumentRequest)
  return false;
#undef DO_
}

void GetDocumentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.GetDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.GetDocumentRequest.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->index_name(), output);
  }

  // uint32 doc_id = 2;
  if (this->doc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->doc_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.GetDocumentRequest)
}

::google::protobuf::uint8* GetDocumentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.GetDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.GetDocumentRequest.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->index_name(), target);
  }

  // uint32 doc_id = 2;
  if (this->doc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->doc_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.GetDocumentRequest)
  return target;
}

size_t GetDocumentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.GetDocumentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string index_name = 1;
  if (this->index_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_name());
  }

  // uint32 doc_id = 2;
  if (this->doc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->doc_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDocumentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.GetDocumentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDocumentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDocumentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.GetDocumentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.GetDocumentRequest)
    MergeFrom(*source);
  }
}

void GetDocumentRequest::MergeFrom(const GetDocumentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.GetDocumentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index_name().size() > 0) {

    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  if (from.doc_id() != 0) {
    set_doc_id(from.doc_id());
  }
}

void GetDocumentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.GetDocumentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDocumentRequest::CopyFrom(const GetDocumentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.GetDocumentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDocumentRequest::IsInitialized() const {
  return true;
}

void GetDocumentRequest::Swap(GetDocumentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDocumentRequest::InternalSwap(GetDocumentRequest* other) {
  using std::swap;
  index_name_.Swap(&other->index_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(doc_id_, other->doc_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDocumentRequest::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDocumentResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDocumentResponse::kTermsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDocumentResponse::GetDocumentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_GetDocumentResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.GetDocumentResponse)
}
GetDocumentResponse::GetDocumentResponse(const GetDocumentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      terms_(from.terms_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.GetDocumentResponse)
}

void GetDocumentResponse::SharedCtor() {
}

GetDocumentResponse::~GetDocumentResponse() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.GetDocumentResponse)
  SharedDtor();
}

void GetDocumentResponse::SharedDtor() {
}

void GetDocumentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDocumentResponse::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDocumentResponse& GetDocumentResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_GetDocumentResponse.base);
  return *internal_default_instance();
}


void GetDocumentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.GetDocumentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  terms_.Clear();
  _internal_metadata_.Clear();
}

bool GetDocumentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.GetDocumentResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 terms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_terms())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_terms())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.GetDocumentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.GetDocumentResponse)
  return false;
#undef DO_
}

void GetDocumentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.GetDocumentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 terms = 1;
  if (this->terms_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _terms_cached_byte_size_));
  }
  for (int i = 0, n = this->terms_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->terms(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.GetDocumentResponse)
}

::google::protobuf::uint8* GetDocumentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.GetDocumentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 terms = 1;
  if (this->terms_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _terms_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->terms_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.GetDocumentResponse)
  return target;
}

size_t GetDocumentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.GetDocumentResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 terms = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->terms_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _terms_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDocumentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.GetDocumentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDocumentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDocumentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.GetDocumentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.GetDocumentResponse)
    MergeFrom(*source);
  }
}

void GetDocumentResponse::MergeFrom(const GetDocumentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.GetDocumentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  terms_.MergeFrom(from.terms_);
}

void GetDocumentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.GetDocumentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDocumentResponse::CopyFrom(const GetDocumentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.GetDocumentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDocumentResponse::IsInitialized() const {
  return true;
}

void GetDocumentResponse::Swap(GetDocumentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDocumentResponse::InternalSwap(GetDocumentResponse* other) {
  using std::swap;
  terms_.InternalSwap(&other->terms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDocumentResponse::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InsertOrUpdateDocumentRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertOrUpdateDocumentRequest::kIndexNameFieldNumber;
const int InsertOrUpdateDocumentRequest::kDocIdFieldNumber;
const int InsertOrUpdateDocumentRequest::kTermsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertOrUpdateDocumentRequest::InsertOrUpdateDocumentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_InsertOrUpdateDocumentRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
}
InsertOrUpdateDocumentRequest::InsertOrUpdateDocumentRequest(const InsertOrUpdateDocumentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      terms_(from.terms_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_name().size() > 0) {
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  doc_id_ = from.doc_id_;
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
}

void InsertOrUpdateDocumentRequest::SharedCtor() {
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_id_ = 0u;
}

InsertOrUpdateDocumentRequest::~InsertOrUpdateDocumentRequest() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
  SharedDtor();
}

void InsertOrUpdateDocumentRequest::SharedDtor() {
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InsertOrUpdateDocumentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InsertOrUpdateDocumentRequest::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InsertOrUpdateDocumentRequest& InsertOrUpdateDocumentRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_InsertOrUpdateDocumentRequest.base);
  return *internal_default_instance();
}


void InsertOrUpdateDocumentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  terms_.Clear();
  index_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_id_ = 0u;
  _internal_metadata_.Clear();
}

bool InsertOrUpdateDocumentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string index_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_name().data(), static_cast<int>(this->index_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.InsertOrUpdateDocumentRequest.index_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 doc_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &doc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 terms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_terms())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_terms())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
  return false;
#undef DO_
}

void InsertOrUpdateDocumentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.InsertOrUpdateDocumentRequest.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->index_name(), output);
  }

  // uint32 doc_id = 2;
  if (this->doc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->doc_id(), output);
  }

  // repeated uint32 terms = 3;
  if (this->terms_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _terms_cached_byte_size_));
  }
  for (int i = 0, n = this->terms_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->terms(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
}

::google::protobuf::uint8* InsertOrUpdateDocumentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.InsertOrUpdateDocumentRequest.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->index_name(), target);
  }

  // uint32 doc_id = 2;
  if (this->doc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->doc_id(), target);
  }

  // repeated uint32 terms = 3;
  if (this->terms_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _terms_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->terms_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
  return target;
}

size_t InsertOrUpdateDocumentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 terms = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->terms_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _terms_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_name());
  }

  // uint32 doc_id = 2;
  if (this->doc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->doc_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertOrUpdateDocumentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertOrUpdateDocumentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertOrUpdateDocumentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
    MergeFrom(*source);
  }
}

void InsertOrUpdateDocumentRequest::MergeFrom(const InsertOrUpdateDocumentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  terms_.MergeFrom(from.terms_);
  if (from.index_name().size() > 0) {

    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  if (from.doc_id() != 0) {
    set_doc_id(from.doc_id());
  }
}

void InsertOrUpdateDocumentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertOrUpdateDocumentRequest::CopyFrom(const InsertOrUpdateDocumentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.InsertOrUpdateDocumentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertOrUpdateDocumentRequest::IsInitialized() const {
  return true;
}

void InsertOrUpdateDocumentRequest::Swap(InsertOrUpdateDocumentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertOrUpdateDocumentRequest::InternalSwap(InsertOrUpdateDocumentRequest* other) {
  using std::swap;
  terms_.InternalSwap(&other->terms_);
  index_name_.Swap(&other->index_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(doc_id_, other->doc_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InsertOrUpdateDocumentRequest::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InsertOrUpdateDocumentResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertOrUpdateDocumentResponse::InsertOrUpdateDocumentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_InsertOrUpdateDocumentResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
}
InsertOrUpdateDocumentResponse::InsertOrUpdateDocumentResponse(const InsertOrUpdateDocumentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
}

void InsertOrUpdateDocumentResponse::SharedCtor() {
}

InsertOrUpdateDocumentResponse::~InsertOrUpdateDocumentResponse() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
  SharedDtor();
}

void InsertOrUpdateDocumentResponse::SharedDtor() {
}

void InsertOrUpdateDocumentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InsertOrUpdateDocumentResponse::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InsertOrUpdateDocumentResponse& InsertOrUpdateDocumentResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_InsertOrUpdateDocumentResponse.base);
  return *internal_default_instance();
}


void InsertOrUpdateDocumentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool InsertOrUpdateDocumentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
  return false;
#undef DO_
}

void InsertOrUpdateDocumentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
}

::google::protobuf::uint8* InsertOrUpdateDocumentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
  return target;
}

size_t InsertOrUpdateDocumentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertOrUpdateDocumentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertOrUpdateDocumentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertOrUpdateDocumentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
    MergeFrom(*source);
  }
}

void InsertOrUpdateDocumentResponse::MergeFrom(const InsertOrUpdateDocumentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void InsertOrUpdateDocumentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertOrUpdateDocumentResponse::CopyFrom(const InsertOrUpdateDocumentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.InsertOrUpdateDocumentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertOrUpdateDocumentResponse::IsInitialized() const {
  return true;
}

void InsertOrUpdateDocumentResponse::Swap(InsertOrUpdateDocumentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertOrUpdateDocumentResponse::InternalSwap(InsertOrUpdateDocumentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InsertOrUpdateDocumentResponse::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteDocumentRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteDocumentRequest::kIndexNameFieldNumber;
const int DeleteDocumentRequest::kDocIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteDocumentRequest::DeleteDocumentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_DeleteDocumentRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.DeleteDocumentRequest)
}
DeleteDocumentRequest::DeleteDocumentRequest(const DeleteDocumentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_name().size() > 0) {
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  doc_id_ = from.doc_id_;
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.DeleteDocumentRequest)
}

void DeleteDocumentRequest::SharedCtor() {
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_id_ = 0u;
}

DeleteDocumentRequest::~DeleteDocumentRequest() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.DeleteDocumentRequest)
  SharedDtor();
}

void DeleteDocumentRequest::SharedDtor() {
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteDocumentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteDocumentRequest::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteDocumentRequest& DeleteDocumentRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_DeleteDocumentRequest.base);
  return *internal_default_instance();
}


void DeleteDocumentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.DeleteDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DeleteDocumentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.DeleteDocumentRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string index_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_name().data(), static_cast<int>(this->index_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.DeleteDocumentRequest.index_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 doc_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &doc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.DeleteDocumentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.DeleteDocumentRequest)
  return false;
#undef DO_
}

void DeleteDocumentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.DeleteDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.DeleteDocumentRequest.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->index_name(), output);
  }

  // uint32 doc_id = 2;
  if (this->doc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->doc_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.DeleteDocumentRequest)
}

::google::protobuf::uint8* DeleteDocumentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.DeleteDocumentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.DeleteDocumentRequest.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->index_name(), target);
  }

  // uint32 doc_id = 2;
  if (this->doc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->doc_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.DeleteDocumentRequest)
  return target;
}

size_t DeleteDocumentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.DeleteDocumentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string index_name = 1;
  if (this->index_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_name());
  }

  // uint32 doc_id = 2;
  if (this->doc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->doc_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteDocumentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.DeleteDocumentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteDocumentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteDocumentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.DeleteDocumentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.DeleteDocumentRequest)
    MergeFrom(*source);
  }
}

void DeleteDocumentRequest::MergeFrom(const DeleteDocumentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.DeleteDocumentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index_name().size() > 0) {

    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  if (from.doc_id() != 0) {
    set_doc_id(from.doc_id());
  }
}

void DeleteDocumentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.DeleteDocumentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteDocumentRequest::CopyFrom(const DeleteDocumentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.DeleteDocumentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDocumentRequest::IsInitialized() const {
  return true;
}

void DeleteDocumentRequest::Swap(DeleteDocumentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteDocumentRequest::InternalSwap(DeleteDocumentRequest* other) {
  using std::swap;
  index_name_.Swap(&other->index_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(doc_id_, other->doc_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteDocumentRequest::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteDocumentResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteDocumentResponse::DeleteDocumentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_DeleteDocumentResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.DeleteDocumentResponse)
}
DeleteDocumentResponse::DeleteDocumentResponse(const DeleteDocumentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.DeleteDocumentResponse)
}

void DeleteDocumentResponse::SharedCtor() {
}

DeleteDocumentResponse::~DeleteDocumentResponse() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.DeleteDocumentResponse)
  SharedDtor();
}

void DeleteDocumentResponse::SharedDtor() {
}

void DeleteDocumentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteDocumentResponse::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteDocumentResponse& DeleteDocumentResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_DeleteDocumentResponse.base);
  return *internal_default_instance();
}


void DeleteDocumentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.DeleteDocumentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DeleteDocumentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.DeleteDocumentResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.DeleteDocumentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.DeleteDocumentResponse)
  return false;
#undef DO_
}

void DeleteDocumentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.DeleteDocumentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.DeleteDocumentResponse)
}

::google::protobuf::uint8* DeleteDocumentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.DeleteDocumentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.DeleteDocumentResponse)
  return target;
}

size_t DeleteDocumentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.DeleteDocumentResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteDocumentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.DeleteDocumentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteDocumentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteDocumentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.DeleteDocumentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.DeleteDocumentResponse)
    MergeFrom(*source);
  }
}

void DeleteDocumentResponse::MergeFrom(const DeleteDocumentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.DeleteDocumentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteDocumentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.DeleteDocumentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteDocumentResponse::CopyFrom(const DeleteDocumentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.DeleteDocumentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDocumentResponse::IsInitialized() const {
  return true;
}

void DeleteDocumentResponse::Swap(DeleteDocumentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteDocumentResponse::InternalSwap(DeleteDocumentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteDocumentResponse::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchRequest::kIndexNameFieldNumber;
const int SearchRequest::kTermsFieldNumber;
const int SearchRequest::kMaxResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchRequest::SearchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_SearchRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.SearchRequest)
}
SearchRequest::SearchRequest(const SearchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      terms_(from.terms_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_name().size() > 0) {
    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  max_results_ = from.max_results_;
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.SearchRequest)
}

void SearchRequest::SharedCtor() {
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_results_ = 0;
}

SearchRequest::~SearchRequest() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.SearchRequest)
  SharedDtor();
}

void SearchRequest::SharedDtor() {
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchRequest::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchRequest& SearchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_SearchRequest.base);
  return *internal_default_instance();
}


void SearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  terms_.Clear();
  index_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_results_ = 0;
  _internal_metadata_.Clear();
}

bool SearchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.SearchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string index_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_name().data(), static_cast<int>(this->index_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Acoustid.Server.PB.SearchRequest.index_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 terms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_terms())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_terms())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.SearchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.SearchRequest)
  return false;
#undef DO_
}

void SearchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.SearchRequest.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->index_name(), output);
  }

  // repeated uint32 terms = 2;
  if (this->terms_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _terms_cached_byte_size_));
  }
  for (int i = 0, n = this->terms_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->terms(i), output);
  }

  // int32 max_results = 3;
  if (this->max_results() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_results(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.SearchRequest)
}

::google::protobuf::uint8* SearchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), static_cast<int>(this->index_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Acoustid.Server.PB.SearchRequest.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->index_name(), target);
  }

  // repeated uint32 terms = 2;
  if (this->terms_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _terms_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->terms_, target);
  }

  // int32 max_results = 3;
  if (this->max_results() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_results(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.SearchRequest)
  return target;
}

size_t SearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.SearchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 terms = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->terms_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _terms_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string index_name = 1;
  if (this->index_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_name());
  }

  // int32 max_results = 3;
  if (this->max_results() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_results());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.SearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.SearchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.SearchRequest)
    MergeFrom(*source);
  }
}

void SearchRequest::MergeFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.SearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  terms_.MergeFrom(from.terms_);
  if (from.index_name().size() > 0) {

    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
  if (from.max_results() != 0) {
    set_max_results(from.max_results());
  }
}

void SearchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchRequest::CopyFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRequest::IsInitialized() const {
  return true;
}

void SearchRequest::Swap(SearchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchRequest::InternalSwap(SearchRequest* other) {
  using std::swap;
  terms_.InternalSwap(&other->terms_);
  index_name_.Swap(&other->index_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(max_results_, other->max_results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchRequest::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchResult::kDocIdFieldNumber;
const int SearchResult::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchResult::SearchResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_SearchResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.SearchResult)
}
SearchResult::SearchResult(const SearchResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&doc_id_, &from.doc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&doc_id_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.SearchResult)
}

void SearchResult::SharedCtor() {
  ::memset(&doc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&doc_id_)) + sizeof(score_));
}

SearchResult::~SearchResult() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.SearchResult)
  SharedDtor();
}

void SearchResult::SharedDtor() {
}

void SearchResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchResult::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchResult& SearchResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_SearchResult.base);
  return *internal_default_instance();
}


void SearchResult::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.SearchResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&doc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&doc_id_)) + sizeof(score_));
  _internal_metadata_.Clear();
}

bool SearchResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.SearchResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 doc_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &doc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.SearchResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.SearchResult)
  return false;
#undef DO_
}

void SearchResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.SearchResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 doc_id = 1;
  if (this->doc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->doc_id(), output);
  }

  // float score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->score(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.SearchResult)
}

::google::protobuf::uint8* SearchResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.SearchResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 doc_id = 1;
  if (this->doc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->doc_id(), target);
  }

  // float score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->score(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.SearchResult)
  return target;
}

size_t SearchResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.SearchResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 doc_id = 1;
  if (this->doc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->doc_id());
  }

  // float score = 2;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.SearchResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.SearchResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.SearchResult)
    MergeFrom(*source);
  }
}

void SearchResult::MergeFrom(const SearchResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.SearchResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.doc_id() != 0) {
    set_doc_id(from.doc_id());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void SearchResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchResult::CopyFrom(const SearchResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchResult::IsInitialized() const {
  return true;
}

void SearchResult::Swap(SearchResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchResult::InternalSwap(SearchResult* other) {
  using std::swap;
  swap(doc_id_, other->doc_id_);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchResult::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchResponse::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchResponse::SearchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_index_2eproto::scc_info_SearchResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acoustid.Server.PB.SearchResponse)
}
SearchResponse::SearchResponse(const SearchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Acoustid.Server.PB.SearchResponse)
}

void SearchResponse::SharedCtor() {
}

SearchResponse::~SearchResponse() {
  // @@protoc_insertion_point(destructor:Acoustid.Server.PB.SearchResponse)
  SharedDtor();
}

void SearchResponse::SharedDtor() {
}

void SearchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchResponse::descriptor() {
  ::protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchResponse& SearchResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_index_2eproto::scc_info_SearchResponse.base);
  return *internal_default_instance();
}


void SearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Acoustid.Server.PB.SearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear();
}

bool SearchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acoustid.Server.PB.SearchResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Acoustid.Server.PB.SearchResult results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acoustid.Server.PB.SearchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acoustid.Server.PB.SearchResponse)
  return false;
#undef DO_
}

void SearchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acoustid.Server.PB.SearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Acoustid.Server.PB.SearchResult results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->results(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Acoustid.Server.PB.SearchResponse)
}

::google::protobuf::uint8* SearchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acoustid.Server.PB.SearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Acoustid.Server.PB.SearchResult results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acoustid.Server.PB.SearchResponse)
  return target;
}

size_t SearchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acoustid.Server.PB.SearchResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Acoustid.Server.PB.SearchResult results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acoustid.Server.PB.SearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acoustid.Server.PB.SearchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acoustid.Server.PB.SearchResponse)
    MergeFrom(*source);
  }
}

void SearchResponse::MergeFrom(const SearchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acoustid.Server.PB.SearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void SearchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acoustid.Server.PB.SearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchResponse::CopyFrom(const SearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acoustid.Server.PB.SearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchResponse::IsInitialized() const {
  return true;
}

void SearchResponse::Swap(SearchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchResponse::InternalSwap(SearchResponse* other) {
  using std::swap;
  CastToBase(&results_)->InternalSwap(CastToBase(&other->results_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchResponse::GetMetadata() const {
  protobuf_index_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_index_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace PB
}  // namespace Server
}  // namespace Acoustid
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::GetIndexRequest* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::GetIndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::GetIndexRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::GetIndexResponse* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::GetIndexResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::GetIndexResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::CreateIndexRequest* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::CreateIndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::CreateIndexRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::CreateIndexResponse* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::CreateIndexResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::CreateIndexResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::DeleteIndexRequest* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::DeleteIndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::DeleteIndexRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::DeleteIndexResponse* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::DeleteIndexResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::DeleteIndexResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::GetDocumentRequest* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::GetDocumentRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::GetDocumentRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::GetDocumentResponse* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::GetDocumentResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::GetDocumentResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::InsertOrUpdateDocumentRequest* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::InsertOrUpdateDocumentRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::InsertOrUpdateDocumentRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::InsertOrUpdateDocumentResponse* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::InsertOrUpdateDocumentResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::InsertOrUpdateDocumentResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::DeleteDocumentRequest* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::DeleteDocumentRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::DeleteDocumentRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::DeleteDocumentResponse* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::DeleteDocumentResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::DeleteDocumentResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::SearchRequest* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::SearchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::SearchRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::SearchResult* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::SearchResult >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::SearchResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acoustid::Server::PB::SearchResponse* Arena::CreateMaybeMessage< ::Acoustid::Server::PB::SearchResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Acoustid::Server::PB::SearchResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
